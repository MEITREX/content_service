type Mutation {
    """
    Create new media content
    Ô∏è‚ö†Ô∏è This mutation is only accessible internally in the system ‚ö†Ô∏è
    üîí The user must have admin access to the course containing the section to perform this action.
    """
    _internal_createMediaContent(courseId: UUID!, input: CreateMediaContentInput!): MediaContent!

    """
    Create a new Assessment
    ‚ö†Ô∏è This mutation is only accessible internally in the system ‚ö†Ô∏è
    üîí The user must have admin access to the course containing the section to perform this action.
    """
    _internal_createAssessment(courseId: UUID!, input: CreateAssessmentInput!): Assessment!

    """
    Modify Content
    üîí The user must have admin access to the course containing the section to perform this action.
    """
    mutateContent(contentId: UUID!): ContentMutation!

    """
    Create new Section
    ‚ö†Ô∏è This mutation is only accessible internally in the system ‚ö†Ô∏è
    üîí The user must have admin access to the course containing the section to perform this action.
    """
    _internal_createSection(courseId: UUID!, input: CreateSectionInput!): Section!

    """
    Modify the section with the given id.
    üîí The user must have admin access to the course containing the section to perform this action.
    """
    mutateSection(sectionId: UUID!): SectionMutation!

}

type ContentMutation {

    """
    Identifier of Content
    """
    contentId: UUID!

    """
    Update an existing Content
    """
    updateMediaContent(input: UpdateMediaContentInput!): MediaContent!

    """
    Update an existing Assessment
    """
    updateAssessment(input: UpdateAssessmentInput!): Assessment!

    """
    Delete an existing Content, throws an error if no Content with the given id exists
    """
    deleteContent: UUID!

    """
    Add a tag to an existing content
    """
    addTagToContent(tagName: String): Content!

    """
    Remove a tag from an existing content
    """
    removeTagFromContent(tagName: String): Content!

}

type SectionMutation {

    """
    Identifier of the section
    """
    sectionId: UUID!
    """
    update the name of a Section
    """
    updateSectionName(name: String!): Section!

    """
    delete a Section by ID
    """
    deleteSection: UUID!

    """
    create new Stage in Section
    """
    createStage(input: CreateStageInput): Stage!

    """
    Update Content of Stage
    """
    updateStage(input: UpdateStageInput): Stage!

    """
    delete Stage by ID
    """
    deleteStage(id: UUID!):UUID!

    """
    update Order of Stages within a Section
    """
    updateStageOrder(stages: [UUID!]!):Section!
}

"""
Input for creating new media content. Media specific fields are stored in the Media Service.
"""
input CreateMediaContentInput {
    """
    Metadata for the new Content
    """
    metadata: CreateContentMetadataInput!
}

input UpdateMediaContentInput {
    """
    Metadata for the new Content
    """
    metadata: UpdateContentMetadataInput!
}

input CreateAssessmentInput {
    """
    Metadata for the new Content
    """
    metadata: CreateContentMetadataInput!
    """
    Assessment metadata
    """
    assessmentMetadata: AssessmentMetadataInput!
    """
    items of the new assessments
    """
    items: [CreateItemInput!]
}

input UpdateAssessmentInput {
    """
    Metadata for the new Content
    """
    metadata: UpdateContentMetadataInput!
    """
    Assessment metadata
    """
    assessmentMetadata: AssessmentMetadataInput!
    """
    items of the new assessments
    """
    items: [ItemInput!]
}

input CreateContentMetadataInput {
    """
    Name of the content
    """
    name: String!
    """
    Type of the content
    """
    type: ContentType!
    """
    Suggested date when the content should be done
    """
    suggestedDate: DateTime!
    """
    Number of reward points a student receives for completing this content
    """
    rewardPoints: Int!
    """
    ID of the chapter this content is associated with
    """
    chapterId: UUID!
    """
    TagNames this content is tagged with
    """
    tagNames: [String!]! = []
}

input UpdateContentMetadataInput {
    """
    Name of the content
    """
    name: String!
    """
    Date when the content should be done
    """
    suggestedDate: DateTime!
    """
    Number of reward points a student receives for completing this content
    """
    rewardPoints: Int!
    """
    ID of the chapter this content is associated with
    """
    chapterId: UUID!
    """
    TagNames this content is tagged with
    """
    tagNames: [String!]! = []
}

input AssessmentMetadataInput {
    """
    Number of skill points a student receives for completing this content
    """
    skillPoints: Int! @PositiveOrZero
    """
    Type of the assessment
    """
    skillTypes: [SkillType!]!
    """
    The initial learning interval for the assessment in days.
    This is the interval that is applied after the assessment is completed the first time.
    Following intervals are calculated based on the previous interval and the user's performance.
    If this is null, the assessment will never be scheduled for review, which
    is useful for assessments that are not meant to be repeated.
    """
    initialLearningInterval: Int @PositiveOrZero
}


input ItemInput{
    """
    might be empty if a new item is created
    """
    id:UUID
    """
    The skills or the competencies the item belongs to.
    """
    associatedSkills:[SkillInput!]!
    """
    The Level of Blooms Taxonomy the item belongs to
    """
    associatedBloomLevels:[BloomLevel!]!
}
input CreateItemInput {
    associatedSkills: [CreateSkillInput!]!
    associatedBloomLevels: [BloomLevel!]!
}

input SkillInput{
    """
    the id of a skill. Field is optional, because not all required skills may exist, if a new item is created. If the id is empty a new skill,
    will be created
    """
    id:UUID
    """
    the name of the skill
    """
    skillName:String!
    """
    the category of the skill
    """
    skillCategory:String!
    """
    whether the skill is a custom-created by the user and no IEEE skill
    """
    isCustomSkill:Boolean!
}
input CreateSkillInput {
    skillName: String!
    skillCategory: String!
    isCustomSkill: Boolean
}


input CreateSectionInput {
    """
    Chapter Section will belong to
    """
    chapterId: UUID!

    """
    name given to Section
    """
    name: String!
}


input CreateStageInput{
    """
    updated List of UUIDs for content labeled as required in this Stage
    """
    requiredContents: [UUID!]!

    """
    updated List of UUIDs for content labeled as optional in this Stage
    """
    optionalContents: [UUID!]!
}

input UpdateStageInput{
    """
    Identifier of the Stage
    """
    id: UUID!

    """
    Updated List of UUIDs for content labeled as required in this Stage. If the content with the given UUID does not
    exist, or does not exist in the current chapter, or is already added to another stage, that content is ignored.
    """
    requiredContents: [UUID!]!

    """
    Updated List of UUIDs for content labeled as optional in this Stage. If the content with the given UUID does not
    exist, or does not exist in the current chapter, or is already added to another stage, that content is ignored.
    """
    optionalContents: [UUID!]!
}