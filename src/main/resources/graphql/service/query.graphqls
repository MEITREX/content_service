type Query {

    """
    Retrieves all existing contents for a given course.
    üîí The user must have access to the courses with the given ids to access their contents, otherwise an error is thrown.
    """
    contentsByCourseIds(courseIds: [UUID!]!): [[Content!]!]

    """
    Retrieves all existing contents for a given course.
    ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
    """
    _internal_noauth_contentsByCourseIds(courseIds: [UUID!]!): [[Content!]!]

    """
    Get contents by ids. Throws an error if any of the ids are not found.
    ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
    """
    _internal_noauth_contentsByIds(ids: [UUID!]!): [Content!]!


    """
    Get contents by ids. Throws an error if any of the ids are not found.
    üîí The user must have access to the courses containing the contents with the given ids to access their contents,
    otherwise an error is thrown.
    """
    contentsByIds(ids: [UUID!]!): [Content!]!

    """
    Get contents by ids. If any of the given ids are not found, the corresponding element in the result list will be null.
    üîí The user must have access to the courses containing the contents with the given ids, otherwise null is returned
    for the respective contents.
    """
    findContentsByIds(ids: [UUID!]!): [Content]!

    """
    Get contents by chapter ids. Returns a list containing sublists, where each sublist contains all contents
    associated with that chapter
    üîí The user must have access to the courses containing the chapters with the given ids, otherwise an error is thrown.
    """
    contentsByChapterIds(chapterIds: [UUID!]!): [[Content!]!]!

    """
    Get contents by chapter ids. Returns a list containing sublists, where each sublist contains all contents
    associated with that chapter
    ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch contents without
    any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
    """
    _internal_noauth_contentsByChapterIds(chapterIds: [UUID!]!): [[Content!]!]!

    """
    Retrieves all existing sections for multiple chapters.
    ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch sections without
    any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
    """
    _internal_noauth_sectionsByChapterIds(chapterIds: [UUID!]!): [[Section!]!]!

    """
    Retrieve progress for multiple chapters
    ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch chapter progress without
    any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
    """
    _internal_noauth_progressByChapterIds(chapterIds: [UUID!]!): [CompositeProgressInformation!]!

    """
    Retrieve progress for a given chapter of the given user
    ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch chapter progress without
    any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
    """
    _internal_noauth_progressByChapterId(chapterId: UUID!, userId: UUID!): CompositeProgressInformation!

    """
    Generates user specific suggestions for multiple chapters.

    Only content that the user can access will be considered.
    The contents will be ranked by suggested date, with the most overdue or most urgent content first.

    üîí The user must have access to the courses containing the chapters with the given ids, otherwise an error is thrown.
    """
    suggestionsByChapterIds(
        """
        The ids of the chapters for which suggestions should be generated.
        """
        chapterIds: [UUID!]!,
        """
        The amount of suggestions to generate in total.
        """
        amount: Int!,
        """
        Only suggestions for these skill types will be generated.
        If no skill types are given, suggestions for all skill types will be generated,
        also containing suggestions for media content (which do not have a skill type).
        """
        skillTypes: [SkillType!]! = []): [Suggestion!]!

    """
    Retrieves all skill types that are achievable for the given chapters.
    Each chapter will have its own list of skill types (batching query).
    ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch without
    any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
    """
    _internal_noauth_achievableSkillTypesByChapterIds(chapterIds: [UUID!]!): [[SkillType!]!]!



    """
    Retrieves all skills that are achievable for the given chapters.
    Each chapter will have its own list of skills(batching query).
    ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch without
    any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
    """
    _internal_noauth_achievableSkillsByChapterIds(chapterIds: [UUID!]!): [[Skill!]!]!


    """
    Retrieves all skills that are achievable for the given courses.
    Each course will have its own list of skill(batching query).
    ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch without
    any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
    """
    _internal_noauth_achievableSkillsByCourseIds(courseIds: [UUID!]!): [[Skill!]!]!

    """
    Retrieves all Content that is currently not part of any section within chapters.
    ‚ö†Ô∏è This query is only accessible internally in the system and allows the caller to fetch content without
    any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
    """
    _internal_noauth_contentWithNoSectionByChapterIds(chapterIds: [UUID!]!): [[Content!]!]!

    _internal_noauth_contentsAvailableToBeWorkedOnByUserForCourses(courseIds: [UUID!]!): [Content!]!

    _internal_noauth_items(ids: [UUID!]!): [Item!]!

}

type ContentPayload {
    """
    the contents
    """
    elements: [Content!]!
    """
    pagination info
    """
    pageInfo: PaginationInfo!
}

type CompositeProgressInformation {

    """
    percentage of completedContents/totalContents
    """
    progress: Float!
    """
    absolut number of completed content
    """
    completedContents: Int!
    """
    absolut number of total content
    """
    totalContents: Int!
}